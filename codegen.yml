schema:
  - playground-application/src/resolvers/*.graphql

generates:
  playground-application/src/__generated__/schema.graphql:
    plugins:
      - schema-ast
    hooks:
      afterOneFileWrite:
        - node _scripts/dump-ast-module.mjs

  playground-application/src/__generated__/types.ts:
    plugins:
      - add:
          content: '/* eslint-disable */'
      - typescript
      - typescript-resolvers
    config:
      contextType: "@karrotmini/playground-application/src/runtime/ApplicationContext#IApplicationContext"
      scalars:
        URL: string
      mappers:
        # Core Mappers
        App: "@karrotmini/playground-core/src/entities#App"
        AppDeployment: "@karrotmini/playground-core/src/entities#DeploymentRef"
        AppManifest: "@karrotmini/playground-core/src/entities#AppManifest"
        Bundle: "@karrotmini/playground-core/src/entities#Bundle"
        BundleUpload: "@karrotmini/playground-core/src/entities#BundleUpload"
        BundleTemplate: "@karrotmini/playground-core/src/entities#BundleTemplate"
        CustomHost: "@karrotmini/playground-core/src/entities#CustomHost"
        UserProfile: "@karrotmini/playground-core/src/entities#UserProfile"
        HostnameProviderInfo: "@karrotmini/playground-core/src/entities#HostnameProviderInfo"
        # Application Mappers
        CreateAppResult: "@karrotmini/playground-application/src/resolvers/CreateAppResult#CreateAppResultRoot"
        CreateUserProfileResult: "@karrotmini/playground-application/src/resolvers/CreateUserProfileResult#CreateUserProfileResultRoot"
        CreateUserProfileResultCreateAppResult: "@karrotmini/playground-application/src/resolvers/CreateUserProfileResultCreateAppResult#CreateUserProfileResultCreateAppResultRoot"
      mapperTypeSuffix: Model
      useTypeImports: true
      avoidOptionals: true
      skipTypename: true
      nonOptionalTypename: true
      maybeValue: T | null
      customResolverFn: |
        (
          parent: TParent,
          args: TArgs,
          context: TContext,
        ) => Promise<TResult> | TResult;

  playground-application/src/__generated__/:
    documents:
      - playground-application/src/usecases/*.graphql
    preset: near-operation-file
    presetConfig:
      extension: .generated.ts
      baseTypesPath: types.ts
    plugins:
      - add:
          content: '/* eslint-disable */'
      - typescript-operations
      - typed-document-node
    config:
      scalars:
        URL: string
      useTypeImports: true
      maybeValue: T | null
      avoidOptionals: true
      skipTypename: true
      nonOptionalTypename: true

  playground-management-api/worker/src/__generated__/:
    schema:
      - playground-management-api/worker/src/resolvers/*.graphql
    documents:
      - playground-management-api/worker/src/usecases/*.graphql
    preset: near-operation-file
    presetConfig:
      extension: .generated.ts
      baseTypesPath: types.ts
    plugins:
      - add:
          content: '/* eslint-disable */'
      - typescript-operations
      - typed-document-node
    config:
      scalars:
        URL: string
      useTypeImports: true
      maybeValue: T | null
      avoidOptionals: true
      skipTypename: true
      nonOptionalTypename: true

  playground-management-api/worker/src/__generated__/schema.graphql:
    schema:
      - playground-management-api/worker/src/resolvers/*.graphql
    plugins:
      - schema-ast
    hooks:
      afterOneFileWrite:
        - node _scripts/dump-ast-module.mjs

  playground-management-api/worker/src/__generated__/types.ts:
    schema:
      - playground-management-api/worker/src/resolvers/*.graphql
    plugins:
      - add:
          content: '/* eslint-disable */'
      - typescript
      - typescript-resolvers
    config:
      contextType: "@karrotmini/playground-application/src/runtime/ApplicationContext#IApplicationContext"
      scalars:
        URL: string
      mappers:
        # Core Mappers
        App: "@karrotmini/playground-core/src/entities#App"
        AppDeployment: "@karrotmini/playground-core/src/entities#DeploymentRef"
        AppManifest: "@karrotmini/playground-core/src/entities#AppManifest"
        Bundle: "@karrotmini/playground-core/src/entities#Bundle"
        BundleUpload: "@karrotmini/playground-core/src/entities#BundleUpload"
        BundleTemplate: "@karrotmini/playground-core/src/entities#BundleTemplate"
        CustomHost: "@karrotmini/playground-core/src/entities#CustomHost"
        UserProfile: "@karrotmini/playground-core/src/entities#UserProfile"
        HostnameProviderInfo: "@karrotmini/playground-core/src/entities#HostnameProviderInfo"
        # Application Mappers
      mapperTypeSuffix: Model
      useTypeImports: true
      avoidOptionals: true
      skipTypename: true
      nonOptionalTypename: true
      maybeValue: T | null
      customResolverFn: |
        (
          parent: TParent,
          args: TArgs,
          context: TContext,
        ) => Promise<TResult> | TResult;
